import java.util.Stack;

public class PowerOutage {

	public int estimateTimeOut(int[] fromJunction, int[] toJunction, int[] ductLength) {
		int totalTime = 0;
		
		for(int x : ductLength) 
			totalTime += x * 2; 
		
		//find longest path
		
		int max = 0; 
		Stack<Integer> stack = new Stack<Integer>();
		for(int node=0; node<fromJunction.length; node++){
			
			int sum = 0;
			stack.push(toJunction[node]);
			while(!stack.empty()) {
				for(int i=0; i<fromJunction.length; i++) {
					if(fromJunction[i] == stack.pop()) {
						stack.push(toJunction[i]);
						sum += ductLength[i];
					}
				}
			}
			
			for(int toNode=0; toNode<fromJunction.length; toNode++) {
				
			}
			
		}
		
		return 0;
	}

}
