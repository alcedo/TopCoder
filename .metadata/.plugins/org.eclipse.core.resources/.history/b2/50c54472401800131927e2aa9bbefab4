
public class Queen {

	public static void main(String[] args) {
		
		
		

	}
	
	
	
	
	public class SolveQueen {
		
		static final int SIZE = 8;
		static final int QUEEN = 1;
		static final int EMPTY = 0;
		
		public int[][] board = new int[SIZE][SIZE];
		
		public boolean solve(int col) {
			
			if(col == board.length) 
				return true;
			
			//Go thru rows for this column 
			for(int row=0; row<board.length; row++) {
				if(!threat(row, col))
					markBoard(row, col);
				
			}
		}
	
		
		// Determines if queen is being threatened at row, col
		public boolean threat(int row, int col) {
			//check row
			for(int i=0; i<board.length; i++) {
				if(board[i][col] == QUEEN) return true;
			}
			
			//check cols
			for(int i=0; i<board.length; i++) {
				if(board[row][i] == QUEEN) return true;
			}
			
			//check diagonal 
			for(int i=0; i<board.length; i++) {
				if(board[i][i] == QUEEN)
					return true;
			}

			return false;
		}
		
		public void markBoard(int row, int col) {
			board[row][col] = QUEEN;
		}
		
		public void unMarkBoard(int row, int col) {
			board[row][col] = EMPTY;
		}
		
	}

}


